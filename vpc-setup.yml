- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: create vprofile vpc
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpccidr }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcout

 #   - debug:
 #       var: vpcout

    - name: create public subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ pubSub1Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile-pubsub1
      register: pubsub1_out


    - name: create public subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ pubSub2Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile-pubsub2
      register: pubsub2_out


    - name: create public subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ pubSub3Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile_pubsub3
      register: pubsub3_out


    - name: create private subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile_privsub1
      register: privsub1_out


    - name: create private subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile_privsub2
      register: privsub2_out


    - name: create private subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        map_public: true
        resource_tags:
          name: vprofile_privsub3
      register: privsub3_out

    - name: internet gateway setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          name: vprofile_IGW
      register: igw_out


    - name: setup public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        resource_tags:
          Name: Route-tables
        subnets:
          -  "{{privsub1_out.subnet.id}}"
          -  "{{privsub2_out.subnet.id}}"
          -  "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out


    - name: create a new NAT gateway and allocate new elastic Import
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: setop private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        resource_tags:
          Name: Route-tables_privRT
        subnets:
          -  "{{privsub1_out.subnet.id}}"
          -  "{{privsub2_out.subnet.id}}"
          -  "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privRT_out